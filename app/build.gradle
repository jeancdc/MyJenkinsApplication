apply plugin: 'com.android.application'
apply plugin: 'jacoco'


android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.ay31281_dev.myjenkinsapplication"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
        all { buildType ->

            task "combineTest${buildType.name.capitalize()}Results"  {

                group = "Reporting"
                description = "Move the unit tests and instrumented tests of the ${buildType.name.capitalize()} variant in one directory only."

                def modules = ["app"]

                doLast {

                    println("project: " + project.projectDir)
                    println("project: " + project.version)

                    modules.each { module ->
                        File combined = file("${project.buildDir}/combined-test-results/${buildType.name}")
                        if (combined.exists()) {
                            combined.deleteDir()
                        }
                        combined.mkdirs();

                        def testDirs = [file("${project.buildDir}/test-results/test${buildType.name.capitalize()}UnitTest/"),
                                        file("${project.buildDir}/outputs/androidTest-results/connected/")];
                        testDirs.each { testDir ->
                            if (!testDir.exists()) {
                                logging.captureStandardOutput LogLevel.WARN
                                println "WARNING: ignoring non-existant ${testDir.path}"
                                return;
                            }
                            files(testDir.listFiles()).each { file ->
                                if (file.isFile()) {
                                    new File(combined, file.getName()) << file.text
                                }
                            }
                        }
                    }
                }



            }
        }
    }
    lintOptions {
        quiet true              // set to true to turn off analysis progress reporting by lint
        abortOnError false      // if true, stop the gradle build if errors are found
        ignoreWarnings false    // if true, only report errors
    }
}

sonarqube {
    properties {

        //def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-27/android.jar"

        property "sonar.host.url", "localhost:9000"
        property "sonar.username", "admin"
        property "sonar.password", "admin"

        property "sonar.projectKey", "com.example.ay31281_dev.myjenkinsapplication"
        property "sonar.projectName", "My Cool Jenkins Application"

        property 'sonar.sourceEncoding', "UTF-8"

        //property "sonar.binaries", "build/intermediates/classes/debug"
        //property "sonar.libraries", libraries
        //property "sonar.java.binaries", "build/intermediates/classes/debug"
        //property "sonar.java.libraries", libraries
        //property "sonar.java.test.binaries", "build/intermediates/classes/debug"
        //property "sonar.java.test.libraries", libraries

        property "sonar.sources", "src/main/java, src/main/res"
        property "sonar.tests", "src/test/java, src/androidTest/java"

        property "sonar.java.coveragePlugin", "jacoco"

        property "sonar.jacoco.reportPaths", fileTree(dir: project.projectDir, includes: ["build/jacoco/*.exec", "build/outputs/code-coverage/connected/*.ec"])

        property "sonar.junit.reportPaths", "build/test-results/testDebugUnitTest, build/outputs/androidTest-results/connected"

        property "sonar.android.lint.report", "build/reports/lint-results-debug.xml"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}


